[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "fantasy-war"
dynamic = ["version"]
description = "Advanced Fantasy Football WAR (Wins Above Replacement) Calculator with MPPR Scoring"
authors = [
    {name = "Christian Lohr", email = "your.email@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["fantasy football", "WAR", "NFL", "analytics", "MPPR"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment :: Board Games",
]

dependencies = [
    "polars>=0.20.0",
    "pydantic>=2.5.0",
    "typer[all]>=0.9.0",
    "rich>=13.7.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "nfl-data-py>=0.3.0",
    "rpy2>=3.5.0",
    "httpx>=0.25.0",
    "pydantic-settings>=2.1.0",
    "loguru>=0.7.0",
    "diskcache>=5.6.0",
    "python-dotenv>=1.0.0",
    "pyarrow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.17.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/fantasy-war"
Documentation = "https://github.com/yourusername/fantasy-war#readme"
Repository = "https://github.com/yourusername/fantasy-war"
Issues = "https://github.com/yourusername/fantasy-war/issues"

[project.scripts]
fantasy-war = "fantasy_war.cli.main:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "fantasy_war.__version__"}

[tool.black]
target-version = ["py311"]
line-length = 88
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=fantasy_war",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "--strict-config",
]
